import { Dayjs } from "dayjs";

export interface IDays {
  /** Текущая дата, отображаемая в календаре */
  date: Dayjs;

  /** Начальная дата диапазона (если выбран диапазон) */
  startDate: Dayjs | null;

  /** Конечная дата диапазона (если выбран диапазон) */
  endDate: Dayjs | null;

  /** Колбэк, вызываемый при выборе даты */
  onClick: (selectedDate: Dayjs) => void;

  /** Флаг, указывающий, включен ли режим выбора диапазона дат */
  range: boolean;
};

export interface IDay extends IDays {
  /** Текущая дата, отображаемая в календаре */
  currentDate: Dayjs;

  /** Колбэк, вызываемый при наведении на день */
  onMouseEnter: () => void;

  /** Колбэк, вызываемый при уходе курсора с дня */
  onMouseLeave: () => void;

  /** Дата, на которую наведен курсор */
  hoveredDate: Dayjs | null;

  /** Минимальная допустимая дата (если ограничение задано) */
  minDate?: Dayjs;

  /** Максимальная допустимая дата (если ограничение задано) */
  maxDate?: Dayjs;
};

export interface DayWrapperProps {
  /** Флаг, указывающий, является ли день сегодняшним */
  isToday?: boolean;

  /** Флаг, указывающий, является ли день началом диапазона */
  isStart?: boolean;

  /** Флаг, указывающий, является ли день концом диапазона */
  isEnd?: boolean;

  /** Флаг, указывающий, находится ли день между началом и концом диапазона */
  isBetween?: boolean;

  /** Флаг, указывающий, находится ли день между началом и наведенной датой */
  isBetweenHover?: boolean;

  /** Флаг, указывающий, является ли день "неактивным" (например, из другого месяца) */
  isMuted?: boolean;

  /** Флаг, указывающий, отключен ли день (например, вне допустимого диапазона) */
  isDisabled?: boolean;

  /** Флаг, указывающий, должен ли день реагировать на наведение */
  shouldHover?: boolean;
};
